/**
 *配置Heft的TypeScript插件。 这个插件也负责管理提示 linting.
 */
{
  "$schema": "https://developer.microsoft.com/json-schemas/heft/typescript.schema.json",

  /**
   * 可选地指定另一个JSON配置文件，该文件从该文件中延伸出来。这提供了一种方法，使标准
   * 设置可以在多个项目中共享。
   */
  // "extends": "base-project/config/typescript.json",

  /**
   *可以设置为 "复制 "或 "硬链接"。如果设置为 "复制"，从缓冲区复制文件。
   * 如果设置为 "硬链接"，文件将被硬链接到缓冲区的位置。
   * 这个选项在制作构建输出的焦油球时很有用，因为TAR文件并不能
   * 正确处理这些硬链接。"hardlink "是默认行为。
   */
  // "copyFromCacheMode": "copy",

  /**
   * 如果提供，除了在tsconfig中指定的模块外，还排放这些模块种类。
   * 注意，这个选项只适用于主tsconfig.json配置。
   */
  "additionalModuleKindsToEmit": [
    // {
    //   /**
    //    * (Required) Must be one of "commonjs", "amd", "umd", "system", "es2015", "esnext"
    //    */
    //  "moduleKind": "amd",
    //
    //   /**
    //    * (Required) 写入输出的文件夹的名称。
    //    */
    //    "outFolderName": "lib-amd"
    // }
  ],

  /**
   * 指定测试将使用的中介文件夹。 因为Jest使用
   * Node.js运行时来执行测试，模块的格式必须是CommonJS。
   *
   * The default value is "lib".
   */
  // "emitFolderNameForTests": "lib-commonjs",

  /**
   * 如果设置为 "true"，TSlint任务将不会被调用。
   */
  // "disableTslint": true,

  /**
   * 设置这个来改变将被同时打开写入的文件句柄的最大数量。
   * 默认是50。
   */
  // "maxWriteParallelism": 50,

  /**
   * 配置额外的文件类型，应该被复制到TypeScript编译器的发射文件夹中，例如
   * 以便这些文件可以通过导入语句来解决。
   */
  "staticAssetsToCopy": {
    /**
     * 应该从src文件夹复制到目标文件夹的文件扩展名。
     */
    // "fileExtensions": [
    //   ".json", ".css"
    // ],
    /**
     * 应该明确包括的Glob模式。
     */
    // "includeGlobs": [
    //   "some/path/*.js"
    // ],
    /**
     * 应该明确排除的Glob模式。这优先于 "includeGlobs "中列出的globs
     * includeGlobs "中的globbs以及与 "fileExtensions "中提供的文件扩展名相匹配的文件。
     */
    // "excludeGlobs": [
    //   "some/path/*.css"
    // ]
  },
  "emitCjsExtensionForCommonJS": true
}
